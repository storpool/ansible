---
- name: Restarting rsyslog
  become: true
  ansible.builtin.systemd:
    name: rsyslog
    state: restarted
    enabled: yes

- name: Reloading sysctl entries
  become: true
  ansible.builtin.command: /sbin/sysctl --system
  changed_when: false

- name: Enabling IOMMU in GRUB config
  become: true
  command: /usr/lib/storpool/enable_grub_iommu --no-change-exit-status 254
  register: enable_grub_iommu_result
  when:
    - not sp_vm | bool
    - sp_run_enable_grub_iommu | bool
  changed_when: enable_grub_iommu_result.rc == 0
  failed_when:
    - enable_grub_iommu_result.rc != 0
    - enable_grub_iommu_result.rc != 254
  notify:
    - Update GRUB configuration
    - Reboot host

- name: Running patchkdumptools on Debian-based OS
  become: true
  command: /usr/lib/storpool/patchkdumptools --no-change-exit-status 254
  register: patch_kdump_tools_result
  changed_when: patch_kdump_tools_result.rc == 0
  failed_when:
    - patch_kdump_tools_result.rc != 0
    - patch_kdump_tools_result.rc != 254
  notify:
    - Update GRUB configuration
    - Reboot host
  when:
    - ansible_os_family == "Debian"

# TODO: Create a map to set the appropriate memory size depending on the total memory available to the machine
- name: Increasing crashkernel size (Debian/Ubuntu)
  become: true
  ansible.builtin.lineinfile:
    path: /etc/default/grub.d/kdump-tools.cfg
    create: yes
    regexp: crashkernel=.*
    line: GRUB_CMDLINE_LINUX_DEFAULT="$GRUB_CMDLINE_LINUX_DEFAULT crashkernel=1024M"
  notify:
    - Update GRUB configuration
    - Reboot host
  when:
    - ansible_os_family == "Debian"

- name: Waiting for memory tests to complete
  become: true
  async_status:
    jid: "{{ memory_test_sleeper.ansible_job_id }}"
  register: job_result
  until: job_result.finished
  retries: 200
  delay: 30
  when:
    - not sp_vm | bool
    - memory_test_sleeper is defined
    - memory_test_sleeper.ansible_job_id is defined

- name: Copy default kernel script
  become: true
  copy:
    src: "files/sp_set_kernel.py"
    dest: "{{ sp_tools_directory }}/sp_set_kernel.py"
  when:
    - sp_kernel_version is defined
    - not ansible_kernel | regex_search("^" + sp_kernel_version)

- name: Set default kernel
  become: true
  ansible.builtin.command:
    cmd: >
      /opt/storpool/python3/bin/python3 -B -u
      "{{ sp_tools_directory }}/sp_set_kernel.py" "{{ sp_kernel_version }}"
  when:
    - sp_kernel_version is defined
    - not ansible_kernel | regex_search("^" + sp_kernel_version)
  notify:
    - Update GRUB configuration
    - Reboot host

- name: Checking if the kernel cmdline contains all expected parameters
  become: true
  command: /usr/lib/storpool/kernel_cmdline_check --exit-code 2
  register: kernel_cmdline_check
  ignore_errors: true
  changed_when: kernel_cmdline_check.rc == 2
  failed_when: kernel_cmdline_check.rc == 1 or kernel_cmdline_check.rc >= 3
  notify:
    - Update GRUB configuration
    - Reboot host

- name: Execute StorPool components post-installation hook
  become: yes
  ansible.builtin.shell: "{{ sp_post_install_components_hook }}"
  when:
    - sp_post_install_components_hook is defined