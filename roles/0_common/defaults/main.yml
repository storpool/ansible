---
sp_testing_lab: false
sp_configure_network: false
sp_alternative_net_setup: false
sp_overwrite_iface_conf: false
sp_single_iface: false
sp_new_cluster: false
sp_update_system: true
sp_retry_install: false
sp_reinstall: true
sp_selinux: "disabled"
sp_summary_wait: true
sp_node_roles: "client"
sp_sed_enable_opal: false
sp_sed_enable_atasf: false
# Defines if we should manage the rc.local on the targeted host
sp_rc_local: true
sp_run_enable_grub_iommu: true
# If the storage capacity on this device is greater than or equal to this
# size (in GB), the installation process will continue.
# NOTE: For VMs the limit is disabled.
bootstrap_host_data_disk_min_size: "{{ sp_vm | ternary('0', '25') }}"
# Valid sp_node_roles values
sp_valid_roles:
  - client
  - server
  - server:1
  - server:2
  - server:3
  - server:4
  - server:5
  - server:6
  - server:7
  - nvme
  - mgmt
  - bridge
  - iscsi
  - debug
# Systemd services
sp_services:
  helper:
    - storpool_hugepages
    - storpool_cgmove
    - storpool_kdump
    - storpool_abrtsync
  common:
    - storpool_beacon
    - storpool_stat
    - storpool_block
  server:
    - storpool_controller
  nvme:
    - storpool_nvmed
  mgmt:
    - storpool_mgmt
  bridge:
    - storpool_bridge
  iscsi:
    - storpool_iscsi
rc_local_commands:
  - "/usr/bin/cpupower set -b 0; # set energy/performance policy to performance"
  - '/usr/bin/cpupower frequency-set -g performance; # set cpufreq/pstate governor to "performance"'
# StorPool tools download URLs
sp_getpackage_name: "{{ 'getpackage-py3.py' if (ansible_distribution_release == 'focal' or (ansible_os_family == 'RedHat' and ansible_distribution_major_version == '8')) else 'getpackage.py' }}"
sp_install_getpackage_url: "https://vault.storpool.com/{{ sp_getpackage_name }}"
sp_install_helper_url: "https://vault.storpool.com/install_modules_helper.py"
sp_vault_url: "{{'http://buildvault.dhcp.vm.storpool.local/getpkg-internal.php' if (sp_testing_lab) else 'https://vault.storpool.com/getpkg.php'}}"

# StorPool paths
sp_config: "{{ inventory_dir }}/storpool.conf"
sp_toolsdir: "/root/storpool"
sp_libdir: "/usr/lib/storpool"
sp_sed_conf: "/etc/storpool/sed.conf"

sp_getpackage: "{{ sp_toolsdir }}/{{ sp_getpackage_name }}"
sp_install_helper: "{{ sp_toolsdir }}/install_modules_helper.py"
sp_mlc: "{{ sp_toolsdir }}/mlc/mlc"
sp_init_drive: "{{ sp_toolsdir }}/init_drive.sh"
sp_perform_memtest: "{{ sp_toolsdir }}/perform_memtest.sh"
sp_perform_disk_test: "{{ sp_toolsdir }}/perform_disktest.sh"

sp_enable_grub_iommu: "{{ sp_libdir }}/enable_grub_iommu"
sp_expose_nvme_drives: "{{ sp_libdir }}/expose_nvme_drives"
sp_multi_server_helper: "{{ sp_libdir }}/multi-server-helper.py"
sp_patchkdumptools: "{{ sp_libdir }}/patchkdumptools"
sp_vf_genconf: "{{ sp_libdir }}/vf-genconf"

sp_installtools: "/usr/local/bin/installtools"
sp_collect_inventory: "/usr/local/bin/collect_inventory"
sp_generate_build_conf: "/usr/local/bin/generate-build-conf"
sp_copytoservers: "/usr/local/bin/copytoservers-old"
sp_showconf: "/usr/sbin/storpool_showconf"
sp_cgtool: "/usr/sbin/storpool_cg"
sp_ctl: "/usr/sbin/storpool_ctl"
sp_python_executable: "/opt/storpool/python3/bin/python3"
sp_cg_conf_extra: ""

epel_repo_url: "https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ ansible_distribution_major_version }}.noarch.rpm"
epel_repo_gpg_key_url: "/etc/pki/rpm-gpg/RPM-GPG-KEY-EPEL-{{ ansible_distribution_major_version }}"
epel_repofile_path: "/etc/yum.repos.d/epel.repo"
cache_timeout: 600

sp_disable_fw: true
sp_release_file: "web"
sp_target_release: "release"
sp_release: "19.01"
sp_fw_ports:
  - 81
  - 3749
  - 47567

sp_roles: {}
sp_roles_list: "{{ sp_node_roles.split(',') }}"
sp_poli: "{{ hostvars['localhost']['ansible_hostname'] == 'poli' }}"
sp_vm: "{{ ansible_product_name == 'KVM' }}"
